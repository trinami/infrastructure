apiVersion: v1
kind: ConfigMap
metadata:
  name: www-nginx.conf
  namespace: www
data:
  nginx.conf: |
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        root /app/trinami.org/store/public;
        index index.php index.html;
        client_max_body_size 6m;
        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
        
        server_tokens off;
        fastcgi_hide_header X-Powered-By;

        location /.well-known/matrix/server {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
          default_type application/json;
          return 200 '{"m.server": "matrix.trinami.zip:443"}';
        }

        location /.well-known/matrix/client {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
          default_type application/json;
          return 200 '{"m.homeserver": { "base_url": "https://matrix.trinami.zip" }}';
        }

        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                # Custom headers and headers various browsers *should* be OK with but aren't
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,publicKey,Authorization';

                # Tell client that this pre-flight info is valid for 20 days
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            index  index.php index.html index.php;
            try_files $uri $uri/ /index.php?_url=$uri&$args;
        }

        location ~ [^/]\.php(/|$) {

            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                    return 404;
            }

            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            # include fastcgi_params;
            
            fastcgi_param   QUERY_STRING            $query_string;
            fastcgi_param   REQUEST_METHOD          $request_method;
            fastcgi_param   CONTENT_TYPE            $content_type;
            fastcgi_param   CONTENT_LENGTH          $content_length;
             
            fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;
            fastcgi_param   SCRIPT_NAME             $fastcgi_script_name;
            fastcgi_param   PATH_INFO               $fastcgi_path_info;
            fastcgi_param   PATH_TRANSLATED         $document_root$fastcgi_path_info;
            fastcgi_param   REQUEST_URI             $request_uri;
            fastcgi_param   DOCUMENT_URI            $document_uri;
            fastcgi_param   DOCUMENT_ROOT           $document_root;
            fastcgi_param   SERVER_PROTOCOL         $server_protocol;
             
            fastcgi_param   GATEWAY_INTERFACE       CGI/1.1;
            fastcgi_param   SERVER_SOFTWARE         nginx/$nginx_version;
             
            fastcgi_param   REMOTE_ADDR             $remote_addr;
            fastcgi_param   REMOTE_PORT             $remote_port;
            fastcgi_param   SERVER_ADDR             $server_addr;
            fastcgi_param   SERVER_PORT             $server_port;
            fastcgi_param   SERVER_NAME             $server_name;
             
            fastcgi_param   HTTPS                   $https;
             
            # PHP only, required if PHP was built with --enable-force-cgi-redirect
            fastcgi_param   REDIRECT_STATUS         200;

            # https://httpoxy.org/
            fastcgi_param   HTTP_PROXY              "";
        }
    }